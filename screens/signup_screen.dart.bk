import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart'; // Import FirebaseAuth
import '../widgets/email_auth_form.dart';
import '../services/auth_service.dart'; // Import your auth service
import '../models/user_model.dart'; // Import your user model
import 'package:provider/provider.dart'; // Import Provider
import 'homescreen.dart'; // Import your HomeScreen

class SignupScreen extends StatefulWidget {
  const SignupScreen({Key? key}) : super(key: key);

  @override
  _SignupScreenState createState() => _SignupScreenState();
}

class _SignupScreenState extends State<SignupScreen> {
  final AuthService _authService = AuthService();

  // Handle email/password signup
  void _handleEmailSignup(String email, String password) async {
    try {
      UserCredential userCredential = (await _authService
          .signUpWithEmailAndPassword(email, password)) as UserCredential; // Assuming you have this method in AuthService
      User? user = userCredential.user;

      if (user != null) {
        // Create a new UserModel and store it in Firestore
        UserModel userModel = UserModel(
          uid: user.uid,
          email: email,
          displayName: '', // Get this from a form field or use a default value
          photoURL: null, // You might get this from a profile picture upload
          likes: 0,
          fame: 0,
          lastSubmittedWord: null,
          lastSubmissionDate: null,
          dailyScore: 0,
        );
        await _authService.createUser(userModel);

        // Navigate to the home screen or another appropriate screen
        // after successful signup. You might want to pass the UserModel
        // to the next screen using Navigator arguments.
        print('User signed up: ${user.email}');
        // Using Provider to navigate and provide the user model
        Navigator.pushReplacement(
          context,
          MaterialPageRoute(
            builder: (context) => ChangeNotifierProvider.value(
              value: userModel, // Provide the newly created user
              child: const HomeScreen(),
            ),
          ),
        );
      }
    } catch (e) {
      // Handle error
      print(e);
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Signup failed. Please try again.')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Sign Up'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0),
          child: EmailAuthForm(
            isLogin: false,
            onSubmit: _handleEmailSignup, // Pass the signup handler
          ),
        ),
      ),
    );
  }
}