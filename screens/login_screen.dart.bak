import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:google_sign_in/google_sign_in.dart';
import 'package:flutter_facebook_auth/flutter_facebook_auth.dart';

class LoginScreen extends StatefulWidget {
  @override
  _LoginScreenState createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  final FirebaseAuth _auth = FirebaseAuth.instance;
  final GoogleSignIn _googleSignIn = GoogleSignIn();
  final FacebookAuth _facebookAuth = FacebookAuth.instance;

  Future<void> _signInWithGoogle() async {
    try {
      final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();
      if (googleUser != null) {
        final GoogleSignInAuthentication googleAuth = await googleUser.authentication;
        final AuthCredential credential = GoogleAuthProvider.credential(
          accessToken: googleAuth.accessToken,
          idToken: googleAuth.idToken,
        );
        await _auth.signInWithCredential(credential);
        Navigator.pushReplacementNamed(context, '/home');
      }
    } catch (e) {
      print('Error signing in with Google: $e');
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Sign-in with Google failed. Please try again.')),
      );
    }
  }

  Future<void> _signInWithFacebook() async {
    try {
      final LoginResult result = await _facebookAuth.login();
      if (result.status == LoginStatus.success) {
        final OAuthCredential credential = FacebookAuthProvider.credential(result.accessToken!.token);
        await _auth.signInWithCredential(credential);
        Navigator.pushReplacementNamed(context, '/home');
      } else {
        print('Error signing in with Facebook: ${result.status}');
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(content: Text('Sign-in with Facebook failed. Please try again.')),
        );
      }
    } catch (e) {
      print('Error signing in with Facebook: $e');
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Sign-in with Facebook failed. Please try again.')),
      );
    }
  }

  Future<void> _signInWithEmail() async {
    // Add email sign-in logic here
    // For example:
    final String email = 'your_email@example.com';
    final String password = 'your_password';
    try {
      await _auth.signInWithEmailAndPassword(email: email, password: password);
      Navigator.pushReplacementNamed(context, '/home');
    } catch (e) {
      print('Error signing in with email: $e');
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Sign-in with email failed. Please try again.')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Game On!', style: TextStyle(color: Colors.white)),
        backgroundColor: Colors.indigo[900],
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Image.asset('assets/logo.png', height: 200),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: _signInWithGoogle,
              style: ButtonStyle(
                backgroundColor: MaterialStateProperty.all<Color>(Colors.red[400]),
                foregroundColor: MaterialStateProperty.all<Color>(Colors.white),
              ),
              child: Padding(
                padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Image.asset('assets/google_logo.png', height: 24),
                    const SizedBox(width: 10),
                    const Text('Sign In with Google'),
                  ],
                ),
              ),
            ),
            const SizedBox(height: 10),
            ElevatedButton(
              onPressed: _signInWithFacebook,
              style: ButtonStyle(
                backgroundColor: MaterialStateProperty.all<Color>(Colors.blue[800]),
                foregroundColor: MaterialStateProperty.all<Color>(Colors.white),
              ),
              child: const Padding(
                padding: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Icon(Icons.facebook, size: 24),
                    SizedBox(width: 10),
                    Text('Sign In with Facebook'),
                  ],
                ),
              ),
            ),
            const SizedBox(height: 10),
            ElevatedButton(
              onPressed: _signInWithEmail,
              style: ButtonStyle(
                backgroundColor: WidgetStateProperty.all<Color>(Colors.indigo[800]),
                foregroundColor: WidgetStateProperty.all<Color>(Colors.white),
              ),
              child: const Padding(
                padding: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Icon(Icons.email, size: 24),
                    SizedBox(width: 10),
                    Text('Sign In with Email'),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
