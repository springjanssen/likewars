import 'package:flutter/material.dart';
import '../widgets/social_auth_button.dart';
import '../widgets/email_auth_form.dart';
import '../services/auth_service.dart';
import '../models/user_model.dart';
import 'signup_screen.dart';
import 'package:provider/provider.dart'; // Import Provider
import 'homescreen.dart'; // Import your HomeScreen

class LoginScreen extends StatefulWidget {
  const LoginScreen({Key? key}) : super(key: key);

  @override
  _LoginScreenState createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  final AuthService _authService = AuthService();

  // Handle social auth button presses
  void _handleSocialAuth(String provider) async {
    UserModel? user;
    if (provider == 'Google') {
      user = await _authService.signInWithGoogle();
    } else if (provider == 'Twitter') {
      user = await _authService.signInWithTwitter();
    }

    if (user != null) {
      // Navigate to the home screen or another appropriate screen
      // after successful login. You might want to pass the UserModel
      // to the next screen using Navigator arguments.
      print('User logged in: ${user.displayName}');
      // Using Provider to navigate and provide the user model
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(
          builder: (context) => ChangeNotifierProvider.value(
            value: user, // Provide the logged-in user
            child: const HomeScreen(),
          ),
        ),
      );
    } else {
      // Show an error message to the user (e.g., using a SnackBar)
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Login failed. Please try again.')),
      );
    }
  }

  // Handle email/password login
  void _handleEmailLogin(String email, String password) async {
    try {
      UserModel? user = await _authService.signInWithEmailAndPassword(
          email, password); // Assuming you have this method in AuthService

      if (user != null) {
        print('User logged in with email: ${user.email}');
        // Navigate to the next screen using Provider
        Navigator.pushReplacement(
          context,
          MaterialPageRoute(
            builder: (context) => ChangeNotifierProvider.value(
              value: user, // Provide the logged-in user
              child: const HomeScreen(),
            ),
          ),
        );
      } else {
        // Show error message for failed login
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(content: Text('Login failed. Please try again.')),
        );
      }
    } catch (e) {
      print('Email login error: $e');
      // Show a more specific error message to the user if possible
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Login failed. Please try again.')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Login'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              // Social Auth Buttons
              SocialAuthButton(
                provider: 'Google',
                onPressed: () => _handleSocialAuth('Google'),
              ),
              SocialAuthButton(
                provider: 'Twitter',
                onPressed: () => _handleSocialAuth('Twitter'),
              ),
              const SizedBox(height: 20),
              const Text('Or', style: TextStyle(fontSize: 16)),
              const SizedBox(height: 20),
              // Email Auth Form
              EmailAuthForm(
                isLogin: true,
                onSubmit: _handleEmailLogin,
              ),
              const SizedBox(height: 10),
              TextButton(
                onPressed: () {
                  // Navigate to Signup Screen
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => SignupScreen()),
                  );
                },
                child: const Text('Don\'t have an account? Sign up'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}